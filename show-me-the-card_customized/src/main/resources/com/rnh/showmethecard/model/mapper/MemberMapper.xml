<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 패키지.클래스이름을 의미 -->
<mapper namespace="com.rnh.showmethecard.model.mapper.MemberMapper">
	<insert id="insertMember" parameterType="Member">
		INSERT INTO rnh2.MEMBER
		(M_ID, PASSWORD, M_NAME, EMAIL, PHONE)
		VALUES
		( #{ mId }, #{ password }, #{ mName }, #{ email }, #{ phone })
	</insert>
	
	<select id="selectMemberById" resultType="Member" parameterType="String">
		SELECT M_ID mId, PASSWORD, M_NAME mName, EMAIL, PHONE, M_COUNT mCount, M_POINT mPoint, M_Level mLevel, USERTYPE, DELETED, left(REG_DATE, 10) regDate
		FROM rnh2.MEMBER
		WHERE M_ID = #{ mId }
	</select>
	
	<select id="selectMemberByIdAndPasswd" resultType="Member" parameterType="HashMap">
		SELECT M_ID mId, PASSWORD, M_NAME mName, EMAIL, PHONE, M_COUNT mCount, M_POINT mPoint, M_Level mLevel, USERTYPE, DELETED, REG_DATE regDate
		FROM rnh2.MEMBER
		WHERE M_ID = #{ mId } AND PASSWORD = #{ password } AND DELETED = '0'
	</select>
	
	<update id="updateMemberById" parameterType="Member">
		UPDATE rnh2.MEMBER
		SET
		PASSWORD = #{ password }, M_NAME = #{ mName }, EMAIL = #{ email }, PHONE = #{ phone }
		WHERE M_ID = #{ mId }
	</update>

	<update id="deleteMemberById" parameterType="Member">
		UPDATE rnh2.MEMBER
		SET
		DELETED ='1'
		WHERE M_ID = #{ mId };		
	</update>	
	
	<select id="selectMembers" resultType="Member">
		SELECT  M_ID mId, M_NAME mName, EMAIL, PHONE, M_POINT mPoint, M_Level mLevel, USERTYPE, left(REG_DATE, 10) regDate
		FROM rnh2.MEMBER
		WHERE DELETED = '0' order by regDate
	</select>
	
	<select id="selectPointHistory" resultType="MemberHistory" parameterType="String">
		SELECT M_ID mId, POINT, left(REG_DATE, 10) regDate, CONTENT
		FROM rnh2.MEMBER_HISTORY 
		WHERE M_ID = #{ mId }
	</select>
	
	<select id="selectPointExist" resultType="boolean" parameterType="HashMap">
		SELECT EXISTS(
		select M_ID, POINT, CONTENT, left(REG_DATE, 10)
		FROM rnh2.MEMBER_HISTORY 
		where M_ID = #{ mId } AND left(REG_DATE, 10) = curdate() AND CONTENT = #{ content } ) 
	</select>
	
	<update id="updatePointHistory" parameterType="HashMap">
		UPDATE rnh2.MEMBER_HISTORY
		SET
		REG_DATE = curdate()
		WHERE M_ID = #{ mId } AND left(REG_DATE, 10) = curdate() AND CONTENT = #{ content }
	</update>
	
	<insert id="insertPointHistory" parameterType="MemberHistory">
		INSERT INTO rnh2.MEMBER_HISTORY
		( M_ID, POINT, CONTENT)
		VALUES 
		( #{ mId }, #{ point }, #{ content })
	</insert>
	
	<update id="updateMemberPoint" parameterType="String">
		UPDATE rnh2.MEMBER
		SET
		M_POINT = (select sum(POINT)
				   FROM rnh2.MEMBER_HISTORY
				   where M_ID = #{ mId })
		WHERE M_ID = #{ mId }
	</update>
	
	<update id="updateMemberLevel" parameterType="HashMap">
		UPDATE rnh2.MEMBER
		SET
		M_LEVEL = #{ mLevel }
		WHERE M_ID = #{ mId }
	</update>
	
	<select id="selectQnalist" parameterType="String" resultType="Qna">
		SELECT 
		    QNA.Q_NO qNo,
		    QNA.TITLE title,
    		left(QNA.REG_DATE, 10) regDate
		FROM rnh2.QNA
		WHERE M_ID=#{ mId } and deleted = '0'
	</select>
</mapper>



